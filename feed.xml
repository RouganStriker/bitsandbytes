<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>bitsandbytes</title>
    <link href="https://rouganstriker.github.io/bitsandbytes/feed.xml" rel="self" />
    <link href="https://rouganstriker.github.io/bitsandbytes" />
    <updated>2024-02-17T17:49:26-05:00</updated>
    <author>
        <name>Nyfor</name>
    </author>
    <id>https://rouganstriker.github.io/bitsandbytes</id>

    <entry>
        <title>SQL Filtering Dilemma</title>
        <author>
            <name>Nyfor</name>
        </author>
        <link href="https://rouganstriker.github.io/bitsandbytes/sql-filtering-dilemma.html"/>
        <id>https://rouganstriker.github.io/bitsandbytes/sql-filtering-dilemma.html</id>
        <media:content url="https://rouganstriker.github.io/bitsandbytes/media/posts/3/IMG_7203.jpg" medium="image" />

        <updated>2024-02-17T17:49:26-05:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://rouganstriker.github.io/bitsandbytes/media/posts/3/IMG_7203.jpg" alt="" />
                    Suppose you are querying against a very large table in your database with some amount of filtering involved. What is the most optimal way to construct and execute this query? tldr; it depends so analyze and measure first. Query filter without joins &lt; Query with&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://rouganstriker.github.io/bitsandbytes/media/posts/3/IMG_7203.jpg" class="type:primaryImage" alt="" /></p>
                <p>Suppose you are querying against a very large table in your database with some amount of filtering involved. What is the most optimal way to construct and execute this query?</p>
<p><strong><em>tldr</em><em>; it depends so analyze and measure first.</em></strong></p>
<p>Query filter without joins &lt; Query with IN filter against static values &lt; Query filter with joinsÂ </p>
<p>The best query involves no joins at all if the filtering can be done on the table alone. Join operations are notoriously expensive and this is very noticeable when joining against large tables. But if joins are necessary or if the filter is very complex, I've seen situations where the query is broken in half with one query pre-computing the result of the subquery into a list of IDs and then converting the primary query to perform an IN filter against that list of IDs. In some cases this does improve the overall performance of the operation by removing an expensive join operation from the query. However it does come at a cost, when you analyze a query that uses an IN filter with a very large list of values, it has a high planning cost likely due to having to process such a large query. So there will be a break-even point after which the approach of an IN filter with static values will be less performant than a subquery with joins. That break-even point depends on the size and complexity of the filter and join operations so it is important to test and measure before deciding which approach to go with.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Initial Commit</title>
        <author>
            <name>Nyfor</name>
        </author>
        <link href="https://rouganstriker.github.io/bitsandbytes/initial-commit.html"/>
        <id>https://rouganstriker.github.io/bitsandbytes/initial-commit.html</id>
        <media:content url="https://rouganstriker.github.io/bitsandbytes/media/posts/1/PXL_20230917_221716877.MP-2.jpg" medium="image" />
            <category term="tech"/>

        <updated>2024-02-10T17:32:38-05:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://rouganstriker.github.io/bitsandbytes/media/posts/1/PXL_20230917_221716877.MP-2.jpg" alt="" />
                    The potential start of a weekly blog (let's see how long this lasts). I spent a few minutes on the internet looking for a good blogging platform and discovered Publii. I had a few criteria in mind while looking evaluating potential tools. Having brought a&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://rouganstriker.github.io/bitsandbytes/media/posts/1/PXL_20230917_221716877.MP-2.jpg" class="type:primaryImage" alt="" /></p>
                <p>The potential start of a weekly blog (let's see how long this lasts).</p>
<p>I spent a few minutes on the internet looking for a good blogging platform and discovered <a href="https://getpublii.com/">Publii</a>. I had a few criteria in mind while looking evaluating potential tools. Having brought a web hosting service and setup my own website in the past, I know there is a very good chance I won't actually commit to maintaining this blog and writing up a weekly blog post so I was looking for a platform that required little to no cost and investment to use. The default look and feel had to be modern enough for my liking as well. Although I do web development for a living and could restyling things to my liking, that would be work and I would prefer not to do work for a hobby project.</p>
<p>Publii was the first tool that stood out to me that met those criteria. It offered a desktop app for managing the website content and supports a Github Pages deployment (free version control!). It's slick and simple which is exactly what I want.</p>
<p>But let's see how that opinion holds up in the far future.</p>
            ]]>
        </content>
    </entry>
</feed>
